{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useValue } from \"./ValueContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Async1 = function Async1() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useValue = useValue(),\n      currentValue = _useValue.currentValue,\n      setCurrentValue = _useValue.setCurrentValue;\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \" Async1 \"\n    }), _jsxs(Text, {\n      children: [\" username: \", currentValue.username, \" \"]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        children: \"Update your username:\"\n      }), _jsx(TextInput, {\n        style: {\n          backgroundColor: 'yellow'\n        },\n        onChangeText: function onChangeText(text) {\n          return setText(text);\n        }\n      })]\n    }), _jsx(Button, {\n      title: \"save username\",\n      onPress: function onPress() {\n        return setCurrentValue({\n          username: text\n        });\n      }\n    })]\n  });\n};\n\nexport default Async1;","map":{"version":3,"names":["React","useState","useValue","Async1","text","setText","currentValue","setCurrentValue","username","flexDirection","backgroundColor"],"sources":["/Users/karenmai/Desktop/625/cs153sum22/components/Async1.js"],"sourcesContent":["import React,{useState} from 'react';\nimport {View,Text,TextInput,Button} from 'react-native';\nimport {useValue} from './ValueContext';\n\nconst Async1 = () => {\n    const [text,setText] = useState(\"\");\n    const {currentValue,setCurrentValue} = useValue();\n    return (\n        <View>\n            <Text> Async1 </Text>\n            <Text> username: {currentValue.username} </Text>\n            <View style={{flexDirection:'row'}}>\n                <Text>Update your username:</Text>\n                <TextInput\n                    style={{backgroundColor:'yellow'}}\n                    onChangeText = {(text)=>setText(text)} \n                />\n            </View>\n            \n            <Button \n               title=\"save username\"\n               onPress = {() => setCurrentValue({username:text})}\n               />\n            \n        </View>\n    )\n}\nexport default Async1;"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,SAAQC,QAAR;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;EACjB,gBAAuBF,QAAQ,CAAC,EAAD,CAA/B;EAAA;EAAA,IAAOG,IAAP;EAAA,IAAYC,OAAZ;;EACA,gBAAuCH,QAAQ,EAA/C;EAAA,IAAOI,YAAP,aAAOA,YAAP;EAAA,IAAoBC,eAApB,aAAoBA,eAApB;;EACA,OACI,MAAC,IAAD;IAAA,WACI,KAAC,IAAD;MAAA;IAAA,EADJ,EAEI,MAAC,IAAD;MAAA,0BAAkBD,YAAY,CAACE,QAA/B;IAAA,EAFJ,EAGI,MAAC,IAAD;MAAM,KAAK,EAAE;QAACC,aAAa,EAAC;MAAf,CAAb;MAAA,WACI,KAAC,IAAD;QAAA;MAAA,EADJ,EAEI,KAAC,SAAD;QACI,KAAK,EAAE;UAACC,eAAe,EAAC;QAAjB,CADX;QAEI,YAAY,EAAI,sBAACN,IAAD;UAAA,OAAQC,OAAO,CAACD,IAAD,CAAf;QAAA;MAFpB,EAFJ;IAAA,EAHJ,EAWI,KAAC,MAAD;MACG,KAAK,EAAC,eADT;MAEG,OAAO,EAAI;QAAA,OAAMG,eAAe,CAAC;UAACC,QAAQ,EAACJ;QAAV,CAAD,CAArB;MAAA;IAFd,EAXJ;EAAA,EADJ;AAmBH,CAtBD;;AAuBA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}